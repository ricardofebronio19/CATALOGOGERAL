name: Build and Release (Windows)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: {}

jobs:
  build:
    name: Build on Windows and create Release
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Create virtualenv
        run: python -m venv .venv

      - name: Install dependencies
        run: .\.venv\Scripts\python -m pip install --upgrade pip && .\.venv\Scripts\python -m pip install -r requirements.txt

      - name: Run build.bat (PyInstaller)
        shell: cmd
        run: .\build.bat

      - name: Upload exe as workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: CatalogoDePecas-exe
          path: dist\CatalogoDePecas.exe

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: "Automated release generated by GitHub Actions."
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release asset (PowerShell)
        if: steps.create_release.outputs.upload_url != ''
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $uploadUrl = "${{ steps.create_release.outputs.upload_url }}?name=CatalogoDePecas.exe"
          Write-Host "Uploading asset to $uploadUrl"
          if (-not (Test-Path 'dist\CatalogoDePecas.exe')) {
            Write-Error 'Asset not found: dist\CatalogoDePecas.exe'
            exit 1
          }
          Invoke-WebRequest -Uri $uploadUrl -Method Post -Headers @{ Authorization = "token $env:GITHUB_TOKEN" } -InFile 'dist\CatalogoDePecas.exe' -ContentType 'application/octet-stream'
